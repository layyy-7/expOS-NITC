//module 7(boot module)
loadi(54,67);
loadi(55,68);

//idle process
loadi(69,11);


//user area page number for idle process is 76
//this sets up kernel stack for calling boot module
SP=76*512-1; 


//invoking the boot module
call BOOT_MODULE;


//setting up the Page table for Idle process.
PTBR=PAGE_TABLE_BASE;
PTLR=10;


//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=-1;
[PTBR+5]="0000";
[PTBR+6]=-1;
[PTBR+7]="0000";

//code
[PTBR+8]=69;
[PTBR+9]="0100";
[PTBR+10]=-1;
[PTBR+11]="0000";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=70;
[PTBR+17]="0110";
[PTBR+18]=-1;
[PTBR+19]="0000";


//making Entries in Process Table for idle process
[PROCESS_TABLE+3]=0;					//userid
[PROCESS_TABLE+1]=0;					//PID
[PROCESS_TABLE+11]=76;					//User Page Area
[PROCESS_TABLE+13]=8*512;				//UPTR field
[PROCESS_TABLE+12]=0;					//KPTR field
[PROCESS_TABLE+14]=PAGE_TABLE_BASE;			//PTBR
[PROCESS_TABLE+15]=10;					//PTLR
[PROCESS_TABLE+4]=RUNNING;				//State


//idle process is scheduled to run first.
[SYSTEM_STATUS_TABLE+1]=0;


//store the starting IP address from the header of the first code page on the top of user stack
[70*512]=[69*512+1];

//assigning SP the logical address of top of user stack as the program returns to the user mode
SP=8*512;


ireturn;
